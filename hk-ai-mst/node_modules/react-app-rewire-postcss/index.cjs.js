'use strict';

var index = (function (config, options) {
	var postcssLoader = findRule(config.module.rules, postcssLoaderMatcher);

	postcssLoader.loader = require.resolve('postcss-loader');

	delete postcssLoader.options.plugins;

	Object.assign(postcssLoader.options, options);

	return config;
});

var findRule = function findRule(rulesSource, ruleMatcher) {
	var _findIndexAndRules = findIndexAndRules(rulesSource, ruleMatcher),
	    index = _findIndexAndRules.index,
	    rules = _findIndexAndRules.rules;

	return rules[index];
};

var findIndexAndRules = function findIndexAndRules(rulesSource, ruleMatcher) {
	var result = void 0;

	var rules = Array.isArray(rulesSource) ? rulesSource : ruleChildren(rulesSource);

	rules.some(function (rule, index) {
		result = ruleMatcher(rule) ? { index, rules } : findIndexAndRules(ruleChildren(rule), ruleMatcher);

		return result;
	});

	return result;
};

var ruleChildren = function ruleChildren(loader) {
	return loader.use || loader.oneOf || Array.isArray(loader.loader) && loader.loader || [];
};

var postcssLoaderMatcher = function postcssLoaderMatcher(rule) {
	return rule.loader && /\bpostcss-loader\b/.test(rule.loader);
};

module.exports = index;
