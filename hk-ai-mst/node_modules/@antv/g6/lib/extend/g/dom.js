/**
 * @fileOverview extend G.Shape
 * @author huangtonger@aliyun.com
 * @ignore
 */
var Util = require('../../util/');

var G = require('@antv/g/lib');

var domToImage = require('dom-to-image');

var Mixin = function Mixin() {};

Util.augment(Mixin, {
  createPath: function createPath() {},
  // temporary solution
  isPointInPath: function isPointInPath(x, y) {
    if (this._cfg.el) {
      var box = this._cfg.el.getBBox();

      if (x <= box.x + box.width && y <= box.y + box.height && x >= box.x && y >= box.y) {
        return true;
      }
    }

    return false;
  },
  drawInner: function drawInner(context) {
    var _this$_attrs = this._attrs,
        html = _this$_attrs.html,
        x = _this$_attrs.x,
        y = _this$_attrs.y,
        width = _this$_attrs.width,
        height = _this$_attrs.height;
    var canvas = this.get('canvas');
    var el = canvas.get('el');
    var tm = Util.clone(this.getTotalMatrix());

    if (Util.isString(html)) {
      html = Util.createDOM(html);
    } else {
      html = html.cloneNode(true);
    }

    el.parentNode.appendChild(html);
    domToImage.toPng(html, {
      width: width,
      height: height
    }).then(function (dataUrl) {
      var img = new Image();
      img.src = dataUrl;

      img.onload = function () {
        context.setTransform(tm[0], tm[1], tm[3], tm[4], tm[6], tm[7]);
        context.drawImage(img, x, y, width, height);
      };
    });
    html.remove();
  }
});
Util.mixin(G.Dom, [Mixin]);
module.exports = Mixin;